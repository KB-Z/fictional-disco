{"version":3,"sources":["components/LoginButton.js","components/AppHeader.js","components/PostEditor.js","components/ErrorSnackbar.js","pages/PostsManager.js","App.js","serviceWorker.js","index.js"],"names":["LoginButton","state","authenticated","user","menuAnchorEl","login","props","auth","logout","handleMenuClose","handleMenuOpen","event","setState","currentTarget","this","checkAuthentication","isAuthenticated","getUser","Button","color","onClick","menuPosition","vertical","horizontal","IconButton","AccountCircle","Menu","anchorEl","anchorOrigin","transformOrigin","open","onClose","MenuItem","ListItemText","primary","secondary","name","Component","withAuth","withStyles","flex","setUserLocation","classes","AppBar","position","Toolbar","Typography","variant","component","Link","to","className","compose","withRouter","theme","modal","display","alignItems","justifyContent","modalCard","width","maxWidth","modalCardContent","flexDirection","marginTop","spacing","post","onSave","history","initialValues","onSubmit","handleSubmit","Modal","goBack","Card","CardContent","input","TextField","label","autoFocus","multiline","rows","CardActions","size","type","withState","uuid","snackbarContent","backgroundColor","palette","error","dark","message","icon","fontSize","iconVariant","opacity","marginRight","id","Snackbar","autoHideDuration","SnackbarContent","margin","aria-describedby","Error","action","key","aria-label","Close","API","process","REACT_APP_API","PostsManager","loading","posts","savePost","a","async","fetch","getPosts","renderPostEditor","match","params","find","Number","method","endpoint","body","JSON","stringify","getAccessToken","accept","authorization","headers","response","json","console","window","confirm","title","length","Paper","elevation","List","orderBy","map","ListItem","button","updatedAt","moment","fromNow","ListItemSecondaryAction","deletePost","Delete","Fab","fab","Add","exact","path","render","bottom","right","breakpoints","down","App","navigator","geolocation","getCurrentPosition","lat","coords","latitude","long","longitude","newViewport","height","zoom","viewport","userLocation","CssBaseline","mapStyle","mapboxApiAccessToken","onViewportChange","Object","keys","src","ImplicitCallback","main","padding","Boolean","location","hostname","oktaConfig","issuer","redirect_uri","origin","client_id","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"mYAWMA,E,2MACJC,MAAQ,CACNC,cAAe,KACfC,KAAM,KACNC,aAAc,M,EAmBhBC,MAAQ,kBAAM,EAAKC,MAAMC,KAAKF,S,EAC9BG,OAAS,WACP,EAAKC,kBACL,EAAKH,MAAMC,KAAKC,U,EAGlBE,eAAiB,SAAAC,GAAK,OAAI,EAAKC,SAAS,CAAER,aAAcO,EAAME,iB,EAC9DJ,gBAAkB,kBAAM,EAAKG,SAAS,CAAER,aAAc,Q,oFAtBpDU,KAAKC,wB,0CAILD,KAAKC,wB,gJAIuBD,KAAKR,MAAMC,KAAKS,mB,WAAtCd,E,UACgBY,KAAKb,MAAMC,c,0CACZY,KAAKR,MAAMC,KAAKU,W,OAA7Bd,E,OACNW,KAAKF,SAAS,CAAEV,gBAAeC,S,gFAazB,IAAD,EACuCW,KAAKb,MAA3CC,EADD,EACCA,cAAeC,EADhB,EACgBA,KAAMC,EADtB,EACsBA,aAE7B,GAAsB,OAAlBF,EAAwB,OAAO,KACnC,IAAKA,EAAe,OAAO,kBAACgB,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAASN,KAAKT,OAAtC,SAE3B,IAAMgB,EAAe,CACnBC,SAAU,MACVC,WAAY,SAGd,OACE,6BACE,kBAACC,EAAA,EAAD,CAAYJ,QAASN,KAAKJ,eAAgBS,MAAM,WAC9C,kBAACM,EAAA,EAAD,OAEF,kBAACC,EAAA,EAAD,CACEC,SAAUvB,EACVwB,aAAcP,EACdQ,gBAAiBR,EACjBS,OAAQ1B,EACR2B,QAASjB,KAAKL,iBAEd,kBAACuB,EAAA,EAAD,CAAUZ,QAASN,KAAKN,QACtB,kBAACyB,EAAA,EAAD,CACEC,QAAQ,SACRC,UAAWhC,GAAQA,EAAKiC,c,GA1DZC,aAmEXC,qBAAStC,GC9CTuC,cArBA,CACbC,KAAM,CACJA,KAAM,IAmBKD,EAfG,SAAC,GAAD,IAAGE,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,QAApB,OACf,kBAACC,EAAA,EAAD,CAAQC,SAAS,YACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAK5B,MAAM,WAA/B,gBAGA,kBAACD,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAASqB,GAAjC,eACA,kBAACvB,EAAA,EAAD,CAAQC,MAAM,UAAU6B,UAAWC,IAAMC,GAAG,KAA5C,QACA,kBAAChC,EAAA,EAAD,CAAQC,MAAM,UAAU6B,UAAWC,IAAMC,GAAG,UAA5C,iBACA,yBAAKC,UAAWT,EAAQF,OACzB,kBAAC,EAAD,W,uJC2CSY,cACbC,aACAd,aA1Da,SAAAe,GAAK,MAAK,CACvBC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTC,MAAO,MACPC,SAAU,KAEZC,iBAAkB,CAChBN,QAAS,OACTO,cAAe,UAEjBC,UAAW,CACTA,UAAWV,EAAMW,QAAQ,QAyCdb,EArCI,SAAC,GAAD,IAAGV,EAAH,EAAGA,QAASwB,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,QAA1B,OACjB,kBAAC,IAAD,CAAMC,cAAeH,EAAMI,SAAUH,IAClC,gBAAGI,EAAH,EAAGA,aAAH,OACC,kBAACC,EAAA,EAAD,CACErB,UAAWT,EAAQa,MACnBxB,QAAS,kBAAMqC,EAAQK,UACvB3C,MAAI,GAEJ,kBAAC4C,EAAA,EAAD,CAAMvB,UAAWT,EAAQiB,WACvB,0BAAMW,SAAUC,GACd,kBAACI,EAAA,EAAD,CAAaxB,UAAWT,EAAQoB,kBAC9B,kBAAC,IAAD,CAAO1B,KAAK,UACT,gBAAGwC,EAAH,EAAGA,MAAH,OAAe,kBAACC,EAAA,EAAD,eAAWC,MAAM,QAAQC,WAAS,GAAKH,OAEzD,kBAAC,IAAD,CAAOxC,KAAK,SACT,gBAAGwC,EAAH,EAAGA,MAAH,OACC,kBAACC,EAAA,EAAD,eACE1B,UAAWT,EAAQsB,UACnBc,MAAM,OACNE,WAAS,EACTC,KAAM,GACFL,QAKZ,kBAACM,EAAA,EAAD,KACE,kBAAChE,EAAA,EAAD,CAAQiE,KAAK,QAAQhE,MAAM,UAAUiE,KAAK,UAA1C,QACA,kBAAClE,EAAA,EAAD,CAAQiE,KAAK,QAAQ/D,QAAS,kBAAMgD,EAAQK,WAA5C,oB,0DCTCrB,eACbiC,YAAU,KAAM,QAASC,MACzB/C,aA3Ca,SAAAe,GAAK,MAAK,CACvBiC,gBAAiB,CACfC,gBAAiBlC,EAAMmC,QAAQC,MAAMC,MAEvCC,QAAS,CACPpC,QAAS,OACTC,WAAY,UAEdoC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAa3C,EAAMW,QAAQ,QA4BhBb,EAxBO,SAAC,GAAD,IAAG8C,EAAH,EAAGA,GAAIN,EAAP,EAAOA,QAAS7D,EAAhB,EAAgBA,QAASW,EAAzB,EAAyBA,QAAzB,OACpB,kBAACyD,EAAA,EAAD,CACErE,MAAI,EACJsE,iBAAkB,IAClBrE,QAASA,GAET,kBAACsE,EAAA,EAAD,CACElD,UAAS,UAAKT,EAAQ4D,OAAb,YAAuB5D,EAAQ6C,iBACxCgB,mBAAkBL,EAClBN,QACE,0BAAMM,GAAIA,EAAI/C,UAAWT,EAAQkD,SAC/B,kBAACY,EAAA,EAAD,CAAWrD,UAAS,UAAKT,EAAQmD,KAAb,YAAqBnD,EAAQqD,eAChDH,GAGLa,OAAQ,CACN,kBAACjF,EAAA,EAAD,CAAYkF,IAAI,QAAQC,aAAW,QAAQxF,MAAM,UAAUC,QAASW,GAClE,kBAAC6E,GAAA,EAAD,CAAWzD,UAAWT,EAAQmD,eCRlCgB,GAAMC,4QAAYC,eAAiB,wBAEnCC,G,2MACJ/G,MAAQ,CACNgH,SAAS,EACTC,MAAO,GACPxB,MAAO,M,EA8BTyB,SAAW,SAAOjD,GAAP,SAAAkD,EAAAC,OAAA,oDACLnD,EAAKgC,GADA,kCAAAkB,EAAA,MAED,EAAKE,MAAM,MAAX,iBAA4BpD,EAAKgC,IAAMhC,IAFtC,+CAAAkD,EAAA,MAID,EAAKE,MAAM,OAAQ,SAAUpD,IAJ5B,OAOT,EAAK5D,MAAM8D,QAAQK,SACnB,EAAK8C,WARI,sC,EAkBXC,iBAAmB,YAAoC,IAAdtB,EAAa,EAAhCuB,MAASC,OAAUxB,GACvC,GAAI,EAAKjG,MAAMgH,QAAS,OAAO,KAC/B,IAAM/C,EAAOyD,eAAK,EAAK1H,MAAMiH,MAAO,CAAEhB,GAAI0B,OAAO1B,KAEjD,OAAKhC,GAAe,QAAPgC,EAEN,kBAAC,EAAD,CAAYhC,KAAMA,EAAMC,OAAQ,EAAKgD,WAFV,kBAAC,WAAD,CAAUjE,GAAG,Y,mFAhD/CpC,KAAKyG,a,+IAGKM,EAAQC,EAAUC,G,sGAEHT,M,eAAST,I,OAAMiB,G,KACpCD,E,KACME,GAAQC,KAAKC,UAAUF,G,kCAIIjH,KAAKR,MAAMC,KAAK2H,kB,iEAF/C,eAAgB,mBAChBC,OAAQ,mBACRC,c,YALFP,O,KACAE,K,KACAM,Q,qFAHIC,E,2BASOA,EAASC,Q,4EAEtBC,QAAQ9C,MAAR,OAEA5E,KAAKF,SAAS,CAAE8E,MAAK,Q,4KAKvB5E,K,mBAA8CA,KAAKwG,MAAM,MAAO,W,gDAAc,G,uBAA9DL,SAAS,EAAOC,M,WAA3BtG,S,kGAcUsD,G,sEACXuE,OAAOC,QAAP,2CAAmDxE,EAAKyE,MAAxD,M,0CACI7H,KAAKwG,MAAM,SAAX,iBAA+BpD,EAAKgC,M,OAC1CpF,KAAKyG,W,gFAaC,IAAD,OACC7E,EAAY5B,KAAKR,MAAjBoC,QAER,OACE,kBAAC,WAAD,KACE,kBAACI,EAAA,EAAD,CAAYC,QAAQ,MAApB,iBACCjC,KAAKb,MAAMiH,MAAM0B,OAAS,EACzB,kBAACC,EAAA,EAAD,CAAOC,UAAW,EAAG3F,UAAWT,EAAQwE,OACtC,kBAAC6B,EAAA,EAAD,KACGC,kBAAQlI,KAAKb,MAAMiH,MAAO,CAAC,YAAa,SAAU,CAAC,OAAQ,QAAQ+B,KAAI,SAAA/E,GAAI,OAC1E,kBAACgF,EAAA,EAAD,CAAUxC,IAAKxC,EAAKgC,GAAIiD,QAAM,EAACnG,UAAWC,IAAMC,GAAE,iBAAYgB,EAAKgC,KACjE,kBAACjE,EAAA,EAAD,CACEC,QAASgC,EAAKyE,MACdxG,UAAW+B,EAAKkF,WAAL,kBAA6BC,IAAOnF,EAAKkF,WAAWE,aAEjE,kBAACC,EAAA,EAAD,KACE,kBAAC/H,EAAA,EAAD,CAAYJ,QAAS,kBAAM,EAAKoI,WAAWtF,IAAO/C,MAAM,WACtD,kBAACsI,EAAA,EAAD,eAQX3I,KAAKb,MAAMgH,SAAW,kBAACnE,EAAA,EAAD,CAAYC,QAAQ,aAApB,uBAEzB,kBAAC2G,EAAA,EAAD,CACEvI,MAAM,YACNwF,aAAW,MACXxD,UAAWT,EAAQiH,IACnB3G,UAAWC,IACXC,GAAG,cAEH,kBAAC0G,EAAA,EAAD,OAEF,kBAAC,QAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,OAAQjJ,KAAK0G,mBAC3C1G,KAAKb,MAAMyF,OACV,kBAAC,GAAD,CACE3D,QAAS,kBAAM,EAAKnB,SAAS,CAAE8E,MAAO,QACtCE,QAAS9E,KAAKb,MAAMyF,MAAME,e,GArGXvD,aA6GZe,eACbd,WACAe,aACAd,aAjIa,SAAAe,GAAK,MAAK,CACvB4D,MAAO,CACLlD,UAAWV,EAAMW,QAAQ,IAE3B0F,IAAI,aACF/G,SAAU,WACVoH,OAAQ1G,EAAMW,QAAQ,GACtBgG,MAAO3G,EAAMW,QAAQ,IACpBX,EAAM4G,YAAYC,KAAK,MAAQ,CAC9BH,OAAQ1G,EAAMW,QAAQ,GACtBgG,MAAO3G,EAAMW,QAAQ,SAoHZb,CAIb4D,IC/HIoD,I,mBACJ,WAAY9J,GAAQ,IAAD,8BACjB,4CAAMA,KAYNmC,gBAAkB,WAChB4H,UAAUC,YAAYC,oBAAmB,SAAA3H,GACvC,IAAIH,EAAkB,CACpB+H,IAAK5H,EAAS6H,OAAOC,SACrBC,KAAM/H,EAAS6H,OAAOG,WAEpBC,EAAc,CAChBC,OAAQ,OACRlH,MAAO,QACP8G,SAAU9H,EAAS6H,OAAOC,SAC1BE,UAAWhI,EAAS6H,OAAOG,UAC3BG,KAAM,IAER,EAAKnK,SAAS,CACZoK,SAAUH,EACVI,aAAcxI,QA1BpB,EAAKxC,MAAQ,CACX+K,SAAU,CACRpH,MAAO,QACPkH,OAAQ,OACRJ,SAAU,UACVE,WAAY,UACZG,KAAM,IAERE,aAAc,IAVC,E,sEAgCR,IAAD,OACN,OACE,kBAAC,WAAD,KACE,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD,CAAWzI,gBAAiB3B,KAAK2B,kBACjC,8BACE,yBAAKU,UAAU,OACb,kBAAC,IAAD,iBACIrC,KAAKb,MAAM+K,SADf,CAEAG,SAAS,uDACTC,qBAAsBtE,gGACtBuE,iBAAkB,SAAAL,GAAQ,OAAI,EAAKpK,SAAS,CAACoK,gBACI,IAAhDM,OAAOC,KAAKzK,KAAKb,MAAMgL,cAAcrC,OACpC,kBAAC,IAAD,CACE8B,SAAU5J,KAAKb,MAAMgL,aAAaT,IAClCI,UAAW9J,KAAKb,MAAMgL,aAAaN,MAEnC,yBAAKxH,UAAU,gBAAgBqI,IAAI,6BAGrC,wCAIJ,kBAAC,cAAD,CAAa1B,KAAK,SAAS9G,UAAWgE,KACtC,kBAAC,QAAD,CAAO8C,KAAK,qBAAqB9G,UAAWyI,2B,GA1DtCpJ,cAgEHE,gBAzEA,SAAAe,GAAK,MAAK,CACvBoI,KAAK,aACHC,QAASrI,EAAMW,QAAQ,IACtBX,EAAM4G,YAAYC,KAAK,MAAQ,CAC9BwB,QAASrI,EAAMW,QAAQ,QAqEd1B,CAAmB6H,IC7EdwB,QACW,cAA7BnD,OAAOoD,SAASC,UAEe,UAA7BrD,OAAOoD,SAASC,UAEhBrD,OAAOoD,SAASC,SAASrE,MACvB,2DCLN,IAAMsE,GAAa,CACjBC,OAAO,GAAD,OAAKlF,8BAAL,mBACNmF,aAAa,GAAD,OAAKxD,OAAOoD,SAASK,OAArB,sBACZC,UAAWrF,wBAObsF,IAASrC,OACP,kBAAC,IAAD,KACE,kBAAC,WAAagC,GACZ,kBAAC,GAAD,QAGJM,SAASC,eAAe,SDsGpB,kBAAmBjC,WACrBA,UAAUkC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.7b721e4f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Button,\n  IconButton,\n  Menu,\n  MenuItem,\n  ListItemText,\n} from '@material-ui/core';\nimport { AccountCircle } from '@material-ui/icons';\nimport { withAuth } from '@okta/okta-react';\n\nclass LoginButton extends Component {\n  state = {\n    authenticated: null,\n    user: null,\n    menuAnchorEl: null,\n  };\n\n  componentDidUpdate() {\n    this.checkAuthentication();\n  }\n\n  componentDidMount() {\n    this.checkAuthentication();\n  }\n\n  async checkAuthentication() {\n    const authenticated = await this.props.auth.isAuthenticated();\n    if (authenticated !== this.state.authenticated) {\n      const user = await this.props.auth.getUser();\n      this.setState({ authenticated, user });\n    }\n  }\n\n  login = () => this.props.auth.login();\n  logout = () => {\n    this.handleMenuClose();\n    this.props.auth.logout();\n  };\n\n  handleMenuOpen = event => this.setState({ menuAnchorEl: event.currentTarget });\n  handleMenuClose = () => this.setState({ menuAnchorEl: null });\n\n  render() {\n    const { authenticated, user, menuAnchorEl } = this.state;\n\n    if (authenticated === null) return null;\n    if (!authenticated) return <Button color=\"inherit\" onClick={this.login}>Login</Button>;\n\n    const menuPosition = {\n      vertical: 'top',\n      horizontal: 'right',\n    };\n\n    return (\n      <div>\n        <IconButton onClick={this.handleMenuOpen} color=\"inherit\">\n          <AccountCircle />\n        </IconButton>\n        <Menu\n          anchorEl={menuAnchorEl}\n          anchorOrigin={menuPosition}\n          transformOrigin={menuPosition}\n          open={!!menuAnchorEl}\n          onClose={this.handleMenuClose}\n        >\n          <MenuItem onClick={this.logout}>\n            <ListItemText\n              primary=\"Logout\"\n              secondary={user && user.name}\n            />\n          </MenuItem>\n        </Menu>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(LoginButton);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  AppBar,\n  Button,\n  Toolbar,\n  Typography,\n  withStyles,\n} from '@material-ui/core';\nimport LoginButton from './LoginButton';\n\nconst styles = {\n  flex: {\n    flex: 1,\n  },\n};\n\nconst AppHeader = ({ setUserLocation, classes }) => (\n   <AppBar position=\"absolute\">\n     <Toolbar>\n       <Typography variant=\"h6\" color=\"inherit\">\n         Fanatik Fuel\n       </Typography>\n       <Button color=\"inherit\" onClick={setUserLocation} >My Location</Button>\n       <Button color=\"inherit\" component={Link} to=\"/\">Home</Button>\n       <Button color=\"inherit\" component={Link} to=\"/posts\">Posts Manager</Button>\n       <div className={classes.flex} />\n      <LoginButton />\n     </Toolbar>\n   </AppBar>\n );\n\nexport default withStyles(styles)(AppHeader);\n","import React from 'react';\nimport {\n  withStyles,\n  Card,\n  CardContent,\n  CardActions,\n  Modal,\n  Button,\n  TextField,\n} from '@material-ui/core';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { Form, Field } from 'react-final-form';\n\nconst styles = theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  modalCard: {\n    width: '90%',\n    maxWidth: 500,\n  },\n  modalCardContent: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  marginTop: {\n    marginTop: theme.spacing(2),\n  },\n});\n\nconst PostEditor = ({ classes, post, onSave, history }) => (\n  <Form initialValues={post} onSubmit={onSave}>\n    {({ handleSubmit }) => (\n      <Modal\n        className={classes.modal}\n        onClose={() => history.goBack()}\n        open\n      >\n        <Card className={classes.modalCard}>\n          <form onSubmit={handleSubmit}>\n            <CardContent className={classes.modalCardContent}>\n              <Field name=\"title\">\n                {({ input }) => <TextField label=\"Title\" autoFocus {...input} />}\n              </Field>\n              <Field name=\"body\">\n                {({ input }) => (\n                  <TextField\n                    className={classes.marginTop}\n                    label=\"Body\"\n                    multiline\n                    rows={4}\n                    {...input}\n                  />\n                )}\n              </Field>\n            </CardContent>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\" type=\"submit\">Save</Button>\n              <Button size=\"small\" onClick={() => history.goBack()}>Cancel</Button>\n            </CardActions>\n          </form>\n        </Card>\n      </Modal>\n    )}\n  </Form>\n);\n\nexport default compose(\n  withRouter,\n  withStyles(styles),\n)(PostEditor);\n","import React from 'react';\nimport {\n  withStyles,\n  Snackbar,\n  SnackbarContent,\n  IconButton,\n} from '@material-ui/core';\nimport { Error as ErrorIcon, Close as CloseIcon } from '@material-ui/icons';\nimport { compose, withState } from 'recompose';\nimport uuid from 'uuid/v4';\n\nconst styles = theme => ({\n  snackbarContent: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n});\n\nconst ErrorSnackbar = ({ id, message, onClose, classes }) => (\n  <Snackbar\n    open\n    autoHideDuration={6000}\n    onClose={onClose}\n  >\n    <SnackbarContent\n      className={`${classes.margin} ${classes.snackbarContent}`}\n      aria-describedby={id}\n      message={\n        <span id={id} className={classes.message}>\n          <ErrorIcon className={`${classes.icon} ${classes.iconVariant}`} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n    />\n  </Snackbar>\n);\n\nexport default compose(\n  withState('id', 'setId', uuid),\n  withStyles(styles),\n)(ErrorSnackbar);\n","import React, { Component, Fragment } from 'react';\nimport { withAuth } from '@okta/okta-react';\nimport { withRouter, Route, Redirect, Link } from 'react-router-dom';\nimport {\n  withStyles,\n  Typography,\n  Fab,\n  IconButton,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n} from '@material-ui/core';\nimport { Delete as DeleteIcon, Add as AddIcon } from '@material-ui/icons';\nimport moment from 'moment';\nimport { find, orderBy } from 'lodash';\nimport { compose } from 'recompose';\n\nimport PostEditor from '../components/PostEditor';\nimport ErrorSnackbar from '../components/ErrorSnackbar';\n\nconst styles = theme => ({\n  posts: {\n    marginTop: theme.spacing(2),\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: theme.spacing(3),\n    [theme.breakpoints.down('xs')]: {\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n    },\n  },\n});\n\nconst API = process.env.REACT_APP_API || 'http://localhost:3001';\n\nclass PostsManager extends Component {\n  state = {\n    loading: true,\n    posts: [],\n    error: null,\n  };\n\n  componentDidMount() {\n    this.getPosts();\n  }\n\n  async fetch(method, endpoint, body) {\n    try {\n      const response = await fetch(`${API}${endpoint}`, {\n        method,\n        body: body && JSON.stringify(body),\n        headers: {\n          'content-type': 'application/json',\n          accept: 'application/json',\n          authorization: `Bearer ${await this.props.auth.getAccessToken()}`,\n        },\n      });\n      return await response.json();\n    } catch (error) {\n      console.error(error);\n\n      this.setState({ error });\n    }\n  }\n\n  async getPosts() {\n    this.setState({ loading: false, posts: (await this.fetch('get', '/posts')) || [] });\n  }\n\n  savePost = async (post) => {\n    if (post.id) {\n      await this.fetch('put', `/posts/${post.id}`, post);\n    } else {\n      await this.fetch('post', '/posts', post);\n    }\n\n    this.props.history.goBack();\n    this.getPosts();\n  }\n\n  async deletePost(post) {\n    if (window.confirm(`Are you sure you want to delete \"${post.title}\"`)) {\n      await this.fetch('delete', `/posts/${post.id}`);\n      this.getPosts();\n    }\n  }\n\n  renderPostEditor = ({ match: { params: { id } } }) => {\n    if (this.state.loading) return null;\n    const post = find(this.state.posts, { id: Number(id) });\n\n    if (!post && id !== 'new') return <Redirect to=\"/posts\" />;\n\n    return <PostEditor post={post} onSave={this.savePost} />;\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Fragment>\n        <Typography variant=\"h4\">Posts Manager</Typography>\n        {this.state.posts.length > 0 ? (\n          <Paper elevation={1} className={classes.posts}>\n            <List>\n              {orderBy(this.state.posts, ['updatedAt', 'title'], ['desc', 'asc']).map(post => (\n                <ListItem key={post.id} button component={Link} to={`/posts/${post.id}`}>\n                  <ListItemText\n                    primary={post.title}\n                    secondary={post.updatedAt && `Updated ${moment(post.updatedAt).fromNow()}`}\n                  />\n                  <ListItemSecondaryAction>\n                    <IconButton onClick={() => this.deletePost(post)} color=\"inherit\">\n                      <DeleteIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </List>\n          </Paper>\n        ) : (\n          !this.state.loading && <Typography variant=\"subtitle1\">No posts to display</Typography>\n        )}\n        <Fab\n          color=\"secondary\"\n          aria-label=\"add\"\n          className={classes.fab}\n          component={Link}\n          to=\"/posts/new\"\n        >\n          <AddIcon />\n        </Fab>\n        <Route exact path=\"/posts/:id\" render={this.renderPostEditor} />\n        {this.state.error && (\n          <ErrorSnackbar\n            onClose={() => this.setState({ error: null })}\n            message={this.state.error.message}\n          />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default compose(\n  withAuth,\n  withRouter,\n  withStyles(styles),\n)(PostsManager);\n","import React, { Fragment, Component } from 'react';\nimport {\n  CssBaseline,\n  withStyles,\n} from '@material-ui/core';\nimport { Route } from 'react-router-dom';\nimport { SecureRoute, ImplicitCallback } from '@okta/okta-react';\n\n// import mapboxgl from 'mapbox-gl';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport AppHeader from './components/AppHeader';\n// import Home from './pages/Home';\nimport PostsManager from './pages/PostsManager';\n// import MapGL from './components/MapGL';\nimport './App.css';\n\nconst styles = theme => ({\n  main: {\n    padding: theme.spacing(3),\n    [theme.breakpoints.down('xs')]: {\n      padding: theme.spacing(2),\n    },\n  },\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      viewport: {\n        width: \"100vw\",\n        height: \"98vh\",\n        latitude: 33.748795,\n        longitude: -84.384904,\n        zoom: 10\n      },\n      userLocation: {}\n    }\n  }\n    setUserLocation = () => {\n      navigator.geolocation.getCurrentPosition(position => {\n        let setUserLocation = {\n          lat: position.coords.latitude,\n          long: position.coords.longitude\n        };\n        let newViewport = {\n          height: \"98vh\",\n          width: \"100vw\",\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n          zoom: 16\n        };\n        this.setState({\n          viewport: newViewport,\n          userLocation: setUserLocation\n        });\n      });\n    };\n    render(){\n      return(\n        <Fragment>\n          <CssBaseline />\n          <AppHeader setUserLocation={this.setUserLocation} />\n          <main>\n            <div className=\"map\">\n              <ReactMapGL\n              {...this.state.viewport}\n              mapStyle=\"mapbox://styles/zdonner179/ck4sq2ix3027r1cl58pru9005\"\n              mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_API_KEY}\n              onViewportChange={viewport => this.setState({viewport})}>\n              {Object.keys(this.state.userLocation).length !== 0 ? (\n                <Marker\n                  latitude={this.state.userLocation.lat}\n                  longitude={this.state.userLocation.long}\n                >\n                  <img className=\"location-icon\" src=\"ICON-MEET-CARBON-3X.png\" />\n                </Marker>\n              ) : (\n                <div>Empty</div>\n              )}\n              </ReactMapGL>\n            </div>\n            <SecureRoute path=\"/posts\" component={PostsManager} />\n            <Route path=\"/implicit/callback\" component={ImplicitCallback} />\n          </main>\n        </Fragment>\n      )}\n};\n\nexport default withStyles(styles)(App);\n\n// export default class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       lng: 5,\n//       lat: 34,\n//       zoom: 2\n//     };\n//   }\n//   componentDidMount() {\n//     const map = new mapboxgl.Map({\n//       container: this.mapContainer,\n//       style: 'mapbox://styles/zdonner179/ck4sq2ix3027r1cl58pru9005',\n//       center: [this.state.lng, this.state.lat],\n//       zoom: this.state.zoom\n//     });\n//     map.on('move', () => {\n//       this.setState({\n//         lng: map.getCenter().lng.toFixed(4),\n//         lat: map.getCenter().lat.toFixed(4),\n//         zoom: map.getZoom().toFixed(2)\n//       });\n//     });\n//   }\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <Navigation />\n//         <main>\n//           <Route exact path=\"/\" component={HomePage} />\n//           <Route\n//             path=\"/login\"\n//             render={() => <LoginPage baseUrl={config.url} />}\n//           />\n//           <Route path=\"/implicit/callback\" component={ImplicitCallback} />\n//           <Route path=\"/register\" component={RegistrationForm} />\n//           <SecureRoute path=\"/profile\" component={ProfilePage} />\n//         </main>\n//           <div className='sidebarStyle'>\n//             <div>Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom: {this.state.zoom}</div>\n//           </div>\n//           <div ref={el => this.mapContainer = el} className='mapContainer' />\n//       </div>\n//     );\n//   }\n// }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import mapboxgl from 'mapbox-gl';\n// import { BrowserRouter as Router } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Security } from '@okta/okta-react';\n// import './index.css';\n// import config from './app.config';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// mapboxgl.accessToken = `${process.env.REACT_APP_MAPBOX_API_KEY}`;\n\nconst oktaConfig = {\n  issuer: `${process.env.REACT_APP_OKTA_ORG_URL}/oauth2/default`,\n  redirect_uri: `${window.location.origin}/implicit/callback`,\n  client_id: process.env.REACT_APP_OKTA_CLIENT_ID,\n};\n\n// function onAuthRequired({ history }) {\n//   history.push('/login');\n// }\n\nReactDOM.render(\n  <BrowserRouter>\n    <Security {...oktaConfig}>\n      <App />\n    </Security>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nif (module.hot) module.hot.accept();\n"],"sourceRoot":""}